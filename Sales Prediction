import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error,mean_squared_error,r2_score
import matplotlib.pyplot as plt
import seaborn as sns

data=pd.read_csv('advertising.csv')
print(data.head())
print(data.columns)
data.columns=[col.strip().replace(' ','_')for col in data.columns]
print(data.columns)
data=data.dropna()
X = data.drop('Sales', axis=1)
y = data['Sales']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model=LinearRegression()
model.fit(X_train, y_train)
y_pred=model.predict(X_test)
mse=mean_squared_error(y_test,y_pred)
r2=r2_score(y_test,y_pred)
print(f"Mean Squared Error (MSE): {mse}")
print(f"R-squared (R2): {r2}")
plt.figure(figsize=(10,6))
sns.scatterplot(x=y_test, y=y_pred)
plt.xlabel('Actual Sales')
plt.ylabel('Predicted Sales')
plt.title('Actual vs Predicted Sales')
plt.show()
plt.figure(figsize=(12,8))
sns.heatmap(data.corr(), annot=True, cmap='coolwarm', linewidths=0.5)
plt.title('correlation matrix')
plt.show()

plt.figure(figsize=(10,6))
sns.histplot(data['Sales'],kde=True)
plt.title("Distribution of Sales")
plt.xlabel('Sales')
plt.ylabel('Frequency')
plt.show()

plt.figure(figsize=(10, 6))
sns.scatterplot(data=data, x='TV', y='Sales')
plt.title('TV Advertising Spend vs Sales')
plt.xlabel('TV Advertising Spend')
plt.ylabel('Sales')
plt.show()

plt.figure(figsize=(10, 6))
sns.scatterplot(data=data, x='Radio', y='Sales')
plt.title('Radio Advertising Spend vs Sales')
plt.xlabel('Radio Advertising Spend')
plt.ylabel('Sales')
plt.show()

plt.figure(figsize=(10, 6))
sns.scatterplot(data=data, x='Newspaper', y='Sales')
plt.title('Newspaper Advertising Spend vs Sales')
plt.xlabel('Newspaper Advertising Spend')
plt.ylabel('Sales')
plt.show()

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, confusion_matrix
from imblearn.over_sampling import SMOTE
from imblearn.under_sampling import RandomUnderSampler
from imblearn.combine import SMOTEENN

data=pd.read_csv('cre')
data.head()

data.isnull().sum()

data=data.drona()
X=data.drop('Class', axis=1)
Y=data['Class']

scaler=StandardScaler()
X_scaled=scaler.fit_transform(X)

print(Y.value_counts())

smote=SMOTE()
X_res, y_res=smote.fit_resample(X_scaled, Y)
X_train, X_test, Y_train, Y_test=train_test_split(X_res, y_res, test_size=0.3, random_state=42)

logreg=LogisticRegression()
logreg.fit(X_train, Y_train)
Y_pred_logreg=logreg.predict(X_test)

rf=RandomForestClassifier()
rf.fit(X_train, Y_train)
Y_pred_rf=rf.predict(X_test)

print("Logistic Regression:")
print(classification_report(Y_test, Y_pred_logreg))
print(confusion_matrix(Y_test, Y_pred_logreg))

print("Random Forest:")
print(classification_report(Y_test, Y_pred_rf))
print(confusion_matrix(Y_test, Y_pred_rf))
